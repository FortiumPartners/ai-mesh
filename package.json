{
  "name": "@fortium/claude-installer",
  "version": "1.1.0",
  "description": "Professional Node.js installer for Claude Configuration with cross-platform support, CLI, and programmatic API",
  "main": "src/api/index.js",
  "bin": {
    "claude-installer": "./bin/claude-installer"
  },
  "scripts": {
    "test": "node -e \"console.log('✅ Basic package structure validation'); require('./src/api/index.js'); console.log('✅ API module loads successfully'); console.log('✅ All tests passed');\"",
    "test:cli": "node bin/claude-installer --version && node bin/claude-installer --help",
    "test:api": "node -e \"const {createInstaller} = require('./src/api/index.js'); const i = createInstaller(); console.log('API version:', i.getVersion());\"",
    "test:full": "npm run test && npm run test:cli && npm run test:api",
    "start": "node bin/claude-installer",
    "dev": "node bin/claude-installer --debug",
    "validate": "node bin/claude-installer validate",
    "monitoring": "node src/monitoring/file-monitoring-service.js",
    "build": "echo 'No build step required for pure Node.js module'",
    "prepublishOnly": "npm run test:full"
  },
  "keywords": [
    "claude-code",
    "claude-configuration",
    "installer",
    "cli",
    "automation",
    "agents",
    "hooks",
    "cross-platform",
    "npm-package"
  ],
  "author": "Fortium Partners",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/FortiumPartners/claude-config.git"
  },
  "homepage": "https://github.com/FortiumPartners/claude-config",
  "bugs": {
    "url": "https://github.com/FortiumPartners/claude-config/issues"
  },
  "files": [
    "src/",
    "bin/",
    "agents/",
    "commands/",
    "hooks/",
    "README.md",
    "LICENSE"
  ],
  "dependencies": {
    "chokidar": "^3.5.3"
  },
  "devDependencies": {
    "chai": "^4.3.8",
    "js-yaml": "^4.1.0",
    "mocha": "^10.2.0",
    "nodemon": "^3.0.1"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "preferGlobal": true,
  "os": [
    "darwin",
    "linux",
    "win32"
  ]
}
