{
  "version": "1.0.0",
  "tools": {
    "helm": {
      "name": "Helm",
      "description": "Kubernetes package manager",
      "confidence_boost": 0.1,
      "detection_signals": {
        "chart_yaml": {
          "weight": 0.6,
          "files": ["Chart.yaml"],
          "description": "Primary Helm chart metadata file"
        },
        "values_yaml": {
          "weight": 0.3,
          "files": ["values.yaml"],
          "description": "Helm chart values file"
        },
        "templates_dir": {
          "weight": 0.2,
          "directories": ["templates"],
          "description": "Helm chart templates directory"
        },
        "cli": {
          "weight": 0.2,
          "file_pattern": "*.sh",
          "patterns": [
            "helm install",
            "helm upgrade",
            "helm rollback",
            "helm template",
            "helm lint",
            "helm package",
            "helm dependency"
          ],
          "description": "Helm CLI commands in scripts"
        },
        "config": {
          "weight": 0.1,
          "files": [
            ".helmignore",
            "requirements.yaml",
            "Chart.lock"
          ],
          "description": "Helm configuration files"
        }
      }
    },
    "kubernetes": {
      "name": "Kubernetes",
      "description": "Container orchestration platform",
      "confidence_boost": 0.1,
      "detection_signals": {
        "api_version": {
          "weight": 0.5,
          "file_pattern": "*.yaml",
          "patterns": [
            "apiVersion:\\s*(v1|apps/v1|batch/v1|networking\\.k8s\\.io/v1|policy/v1|rbac\\.authorization\\.k8s\\.io/v1)"
          ],
          "description": "Kubernetes apiVersion field in YAML files"
        },
        "kind_field": {
          "weight": 0.4,
          "file_pattern": "*.yaml",
          "patterns": [
            "kind:\\s*(Deployment|Service|Pod|StatefulSet|DaemonSet|Job|CronJob|Ingress|ConfigMap|Secret|PersistentVolume|PersistentVolumeClaim|ServiceAccount|Role|RoleBinding|ClusterRole|ClusterRoleBinding|NetworkPolicy)"
          ],
          "description": "Kubernetes resource kind field"
        },
        "kustomization": {
          "weight": 0.3,
          "files": ["kustomization.yaml", "kustomization.yml"],
          "description": "Kustomize configuration file"
        },
        "cli": {
          "weight": 0.2,
          "file_pattern": "*.sh",
          "patterns": [
            "kubectl apply",
            "kubectl get",
            "kubectl describe",
            "kubectl delete",
            "kubectl create",
            "kubectl exec",
            "kubectl logs",
            "kubectl port-forward"
          ],
          "description": "kubectl CLI commands in scripts"
        },
        "config": {
          "weight": 0.2,
          "files": [
            ".kube/config",
            "kubeconfig",
            "k8s/"
          ],
          "description": "Kubernetes configuration files"
        },
        "manifests_dir": {
          "weight": 0.1,
          "directories": ["k8s", "kubernetes", "manifests"],
          "description": "Common Kubernetes manifest directories"
        }
      }
    },
    "kustomize": {
      "name": "Kustomize",
      "description": "Kubernetes configuration customization",
      "confidence_boost": 0.1,
      "detection_signals": {
        "kustomization_yaml": {
          "weight": 0.7,
          "files": ["kustomization.yaml", "kustomization.yml"],
          "description": "Kustomize configuration file"
        },
        "cli": {
          "weight": 0.3,
          "file_pattern": "*.sh",
          "patterns": [
            "kustomize build",
            "kubectl apply -k",
            "kubectl kustomize"
          ],
          "description": "Kustomize CLI commands"
        }
      }
    },
    "argocd": {
      "name": "ArgoCD",
      "description": "GitOps continuous delivery for Kubernetes",
      "confidence_boost": 0.1,
      "detection_signals": {
        "application_yaml": {
          "weight": 0.6,
          "file_pattern": "*.yaml",
          "patterns": [
            "kind:\\s*Application",
            "apiVersion:\\s*argoproj\\.io/v1alpha1"
          ],
          "description": "ArgoCD Application manifest"
        },
        "cli": {
          "weight": 0.3,
          "file_pattern": "*.sh",
          "patterns": [
            "argocd app",
            "argocd sync",
            "argocd login"
          ],
          "description": "ArgoCD CLI commands"
        },
        "config": {
          "weight": 0.2,
          "directories": ["argocd"],
          "description": "ArgoCD configuration directory"
        }
      }
    },
    "flyio": {
      "name": "Fly.io",
      "description": "Modern platform-as-a-service for global application deployment",
      "confidence_boost": 0.1,
      "detection_signals": {
        "fly_toml": {
          "weight": 0.7,
          "files": ["fly.toml", "**/fly.toml"],
          "description": "Primary Fly.io configuration file with app name and services configuration"
        },
        "fly_cli": {
          "weight": 0.15,
          "file_pattern": "*.{sh,yml,yaml}",
          "patterns": [
            "fly deploy",
            "fly launch",
            "fly scale",
            "fly secrets",
            "fly regions",
            "fly status",
            "fly logs",
            "fly ssh",
            "fly machine",
            "fly redis",
            "flyctl deploy",
            "flyctl launch"
          ],
          "description": "Fly.io CLI commands in deployment scripts and CI/CD workflows"
        },
        "fly_domain": {
          "weight": 0.1,
          "file_patterns": [
            "**/*.toml",
            "**/*.yaml",
            "**/*.yml",
            "**/*.json",
            "**/.env*",
            "**/config.env"
          ],
          "patterns": [
            "\\.fly\\.dev",
            "\\.fly\\.io",
            "fly_app_name",
            "FLY_APP_NAME",
            "FLY_API_TOKEN",
            "FLY_REGION"
          ],
          "description": "Fly.io domain patterns and environment variables in configuration files"
        },
        "dockerfile_flyio": {
          "weight": 0.05,
          "files": ["Dockerfile"],
          "patterns": [
            "# syntax = docker/dockerfile:1",
            "flyctl"
          ],
          "description": "Fly.io-optimized Dockerfile patterns"
        }
      }
    }
  },
  "detection_rules": {
    "minimum_confidence": 0.7,
    "multi_signal_boost": 0.1,
    "minimum_signals_for_boost": 3
  }
}
