# =====================================================
# Environment Configuration Template
# External Metrics Web Service
# =====================================================

# =====================================================
# Database Configuration
# =====================================================

# Primary database connection URL (PostgreSQL with Docker)
DATABASE_URL="postgresql://metrics_user:secure_development_password@localhost:5432/metrics_development"

# Shadow database URL for Prisma migrations
SHADOW_DATABASE_URL="postgresql://metrics_user:secure_development_password@localhost:5432/metrics_development_shadow"

# Connection Pool Settings
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10
DATABASE_POOL_TIMEOUT_MS=5000
DATABASE_QUERY_TIMEOUT_MS=10000

# Legacy PostgreSQL connection settings (for existing pg client)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=metrics_development
DB_USER=metrics_user
DB_PASSWORD=secure_development_password
DB_POOL_SIZE=10
DB_SSL=false

# =====================================================
# Application Configuration
# =====================================================

# Server Configuration
PORT=3001
NODE_ENV=development
LOG_LEVEL=info

# API Configuration
API_VERSION=v1
API_BASE_PATH=/api/v1

# =====================================================
# Authentication Configuration
# =====================================================

# JWT Configuration
JWT_SECRET=your-super-secure-jwt-secret-key-here-change-in-production
JWT_REFRESH_SECRET=your-super-secure-jwt-refresh-secret-key-different-from-main
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# Session Configuration
SESSION_SECRET=your-super-secure-session-secret-change-in-production

# =====================================================
# Multi-tenant Configuration
# =====================================================

# Default tenant configuration
DEFAULT_TENANT_DOMAIN=demo
DEFAULT_SUBSCRIPTION_PLAN=basic

# Tenant limits per subscription plan
BASIC_PLAN_USER_LIMIT=10
BASIC_PLAN_SESSION_LIMIT=1000
PRO_PLAN_USER_LIMIT=50
PRO_PLAN_SESSION_LIMIT=10000
ENTERPRISE_PLAN_USER_LIMIT=unlimited
ENTERPRISE_PLAN_SESSION_LIMIT=unlimited

# =====================================================
# External Service Configuration
# =====================================================

# Redis Configuration (optional for local development)
REDIS_URL=
REDIS_PASSWORD=
REDIS_KEY_PREFIX=fortium:metrics:

# Kafka Configuration (optional for local development)
KAFKA_BROKERS=
KAFKA_CLIENT_ID=metrics-web-service
KAFKA_GROUP_ID=metrics-consumers

# =====================================================
# Monitoring and Analytics
# =====================================================

# Performance Monitoring
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_SAMPLE_RATE=0.1

# Query Performance
SLOW_QUERY_THRESHOLD_MS=1000
ENABLE_QUERY_LOGGING=true

# Analytics
ENABLE_ANALYTICS=true

# =====================================================
# OpenTelemetry Configuration
# =====================================================

# OTEL Feature Flags
OTEL_ENABLED=true
OTEL_SERVICE_NAME=fortium-monitoring-service
OTEL_SERVICE_VERSION=1.0.0
OTEL_SERVICE_NAMESPACE=fortium

# OTEL Exporter Endpoints
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces
OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://localhost:4318/v1/metrics
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://localhost:4318/v1/logs

# OTEL Sampling
OTEL_TRACE_SAMPLE_RATE=1.0

# OTEL Metrics
OTEL_METRIC_EXPORT_INTERVAL=30000
OTEL_TRACE_TIMEOUT=10000

# OTEL Propagators
OTEL_PROPAGATORS=tracecontext,baggage,b3

# OTEL Resource Attributes
OTEL_RESOURCE_ATTRIBUTES=deployment.environment=development,team=platform

# Prometheus Integration
OTEL_ENABLE_PROMETHEUS=true
OTEL_PROMETHEUS_PORT=9464
ANALYTICS_BATCH_SIZE=100
ANALYTICS_FLUSH_INTERVAL_MS=5000

# =====================================================
# Security Configuration
# =====================================================

# CORS Settings
CORS_ORIGIN=http://localhost:3001,http://localhost:3000
CORS_CREDENTIALS=true

# Rate Limiting (Development-friendly settings)
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=1000

# Security Headers
ENABLE_HELMET=true
ENABLE_COMPRESSION=true

# =====================================================
# Development Configuration
# =====================================================

# Development Tools
ENABLE_PRISMA_STUDIO=true
ENABLE_API_DOCS=true
ENABLE_DEBUG_ROUTES=false

# Testing
TEST_DATABASE_URL="postgresql://metrics_user:secure_password@localhost:5432/metrics_test"
TEST_REDIS_URL=redis://localhost:6380

# =====================================================
# Production Configuration Hints
# =====================================================

# In production, ensure you:
# 1. Generate strong, unique values for all secrets
# 2. Use environment-specific database URLs
# 3. Set NODE_ENV=production
# 4. Configure appropriate LOG_LEVEL (warn or error)
# 5. Set up proper SSL certificates for database connections
# 6. Use managed services for Redis and Kafka
# 7. Configure proper CORS origins
# 8. Set appropriate rate limits
# 9. Enable all security features
# 10. Set up proper monitoring and alerting