"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_controller_1 = require("../auth/auth.controller");
const security_middleware_1 = require("../middleware/security.middleware");
const auth_middleware_1 = require("../auth/auth.middleware");
const validation_1 = require("../utils/validation");
const response_1 = require("../utils/response");
const router = (0, express_1.Router)();
router.use(response_1.responseMiddleware);
router.post('/login', security_middleware_1.authRateLimit, (0, validation_1.validate)(validation_1.authSchemas.login), auth_controller_1.AuthController.login);
router.post('/refresh', (0, validation_1.validate)(validation_1.authSchemas.refreshToken), auth_controller_1.AuthController.refreshToken);
router.post('/logout', auth_middleware_1.optionalAuth, auth_controller_1.AuthController.logout);
router.get('/profile', auth_middleware_1.authenticateToken, auth_controller_1.AuthController.getProfile);
router.put('/profile', auth_middleware_1.authenticateToken, auth_controller_1.AuthController.updateProfile);
router.post('/sso/user', auth_controller_1.AuthController.createOrUpdateSSOUser);
router.put('/password', auth_middleware_1.authenticateToken, (0, validation_1.validate)(validation_1.authSchemas.changePassword), auth_controller_1.AuthController.changePassword);
router.post('/validate-password', (0, validation_1.validate)(validation_1.authSchemas.validatePassword), auth_controller_1.AuthController.validatePassword);
router.post('/revoke-all', auth_middleware_1.authenticateToken, auth_controller_1.AuthController.revokeAllTokens);
router.get('/health', auth_controller_1.AuthController.healthCheck);
exports.default = router;
//# sourceMappingURL=auth.routes.js.map