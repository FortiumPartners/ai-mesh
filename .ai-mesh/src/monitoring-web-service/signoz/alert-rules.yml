# SignOz Alert Rules Configuration
# Task 5.2: Alert Rules Configuration (Sprint 5)
# Comprehensive alert rules for proactive monitoring and incident response

groups:
  # =========================================================================
  # CRITICAL SYSTEM ALERTS (P1) - Immediate Response Required
  # =========================================================================
  - name: "critical-system-alerts"
    interval: 30s
    rules:
      # Service Availability Alerts
      - alert: "ServiceDown"
        expr: up{job="monitoring-web-service"} == 0
        for: 1m
        labels:
          severity: "critical"
          priority: "P1"
          service: "monitoring-web-service"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/service-down"
        annotations:
          summary: "Service {{ $labels.instance }} is down"
          description: "The monitoring web service on {{ $labels.instance }} has been down for more than 1 minute. This indicates a critical service failure requiring immediate attention."
          impact: "Complete service unavailability"
          action: "Check service logs, restart if necessary, escalate to on-call engineer"
          dashboard: "https://signoz.fortium.dev/dashboard/service-overview"

      # High Error Rate Alert
      - alert: "HighErrorRate"
        expr: (rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])) > 0.05
        for: 2m
        labels:
          severity: "critical"
          priority: "P1"
          service: "monitoring-web-service"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/high-error-rate"
        annotations:
          summary: "High error rate detected: {{ $value | humanizePercentage }}"
          description: "Error rate is {{ $value | humanizePercentage }} for service {{ $labels.service }}, which exceeds the 5% threshold for more than 2 minutes."
          impact: "User experience degradation, potential data loss"
          action: "Check error logs, identify root cause, fix underlying issues"
          current_rate: "{{ $value | humanizePercentage }}"
          threshold: "5%"

      # Database Connection Failure
      - alert: "DatabaseConnectionFailure"
        expr: postgresql_up{job="postgresql"} == 0
        for: 1m
        labels:
          severity: "critical"
          priority: "P1"
          service: "postgresql"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/database-failure"
        annotations:
          summary: "Database connection failure on {{ $labels.instance }}"
          description: "PostgreSQL database on {{ $labels.instance }} is unreachable. All dependent services will be affected."
          impact: "Complete application failure, data unavailability"
          action: "Check database server, network connectivity, restart database if necessary"

      # WebSocket Connection Storm
      - alert: "WebSocketConnectionStorm"
        expr: websocket_active_connections > 1200
        for: 2m
        labels:
          severity: "critical"
          priority: "P1"
          service: "websocket"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/websocket-storm"
        annotations:
          summary: "WebSocket connection storm detected: {{ $value }} connections"
          description: "Active WebSocket connections ({{ $value }}) exceed the safe threshold of 1200 connections."
          impact: "Service degradation, potential service crash"
          action: "Check for connection leaks, implement connection throttling, scale horizontally if needed"
          current_connections: "{{ $value }}"
          threshold: "1200"

  # =========================================================================
  # HIGH PRIORITY ALERTS (P2) - Response Within 15 Minutes
  # =========================================================================
  - name: "high-priority-alerts"
    interval: 60s
    rules:
      # High Response Time
      - alert: "HighResponseTime"
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 5
        for: 5m
        labels:
          severity: "high"
          priority: "P2"
          service: "monitoring-web-service"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/high-response-time"
        annotations:
          summary: "High response time detected: {{ $value }}s (P95)"
          description: "95th percentile response time is {{ $value }}s, exceeding 5s threshold for more than 5 minutes."
          impact: "Poor user experience, potential timeout errors"
          action: "Check performance metrics, identify bottlenecks, optimize slow queries"
          p95_latency: "{{ $value }}s"
          threshold: "5s"

      # Database Slow Query Alert
      - alert: "DatabaseSlowQuery"
        expr: postgresql_slow_queries_total > 10
        for: 5m
        labels:
          severity: "high"
          priority: "P2"
          service: "postgresql"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/slow-queries"
        annotations:
          summary: "Slow database queries detected: {{ $value }} queries"
          description: "Number of slow queries (>10s execution time) is {{ $value }}, indicating performance issues."
          impact: "Application performance degradation"
          action: "Identify and optimize slow queries, check database load"
          slow_queries: "{{ $value }}"

      # Memory Usage High
      - alert: "HighMemoryUsage"
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes > 0.85
        for: 10m
        labels:
          severity: "high"
          priority: "P2"
          service: "system"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/high-memory-usage"
        annotations:
          summary: "High memory usage: {{ $value | humanizePercentage }}"
          description: "Memory usage on {{ $labels.instance }} is {{ $value | humanizePercentage }}, exceeding 85% for more than 10 minutes."
          impact: "Risk of out-of-memory conditions, service crashes"
          action: "Identify memory-intensive processes, consider scaling or optimization"
          memory_usage: "{{ $value | humanizePercentage }}"
          threshold: "85%"

      # Database Connection Pool Exhausted
      - alert: "DatabaseConnectionPoolExhausted"
        expr: (postgresql_active_connections / postgresql_max_connections) > 0.9
        for: 5m
        labels:
          severity: "high"
          priority: "P2"
          service: "postgresql"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/connection-pool-exhausted"
        annotations:
          summary: "Database connection pool exhausted: {{ $value | humanizePercentage }}"
          description: "Database connection pool utilization is {{ $value | humanizePercentage }}, exceeding 90% threshold."
          impact: "New connections will be rejected, service degradation"
          action: "Check for connection leaks, increase pool size, or optimize connection usage"
          pool_utilization: "{{ $value | humanizePercentage }}"
          active_connections: "{{ query \"postgresql_active_connections\" | first | value }}"
          max_connections: "{{ query \"postgresql_max_connections\" | first | value }}"

  # =========================================================================
  # BUSINESS METRIC ALERTS (P2/P3) - Business Process Monitoring
  # =========================================================================
  - name: "business-metric-alerts"
    interval: 120s
    rules:
      # Authentication Failure Spike
      - alert: "AuthenticationFailureSpike"
        expr: rate(authentication_failures_total[5m]) > 0.1
        for: 5m
        labels:
          severity: "high"
          priority: "P2"
          service: "authentication"
          team: "security"
          runbook: "https://docs.fortium.dev/runbooks/auth-failure-spike"
        annotations:
          summary: "Authentication failure spike detected: {{ $value }} failures/second"
          description: "Authentication failure rate is {{ $value }} failures/second, indicating potential security issues or system problems."
          impact: "Potential security breach, user access issues"
          action: "Check for brute force attacks, verify authentication service health"
          failure_rate: "{{ $value }}/second"
          threshold: "0.1/second"

      # Tenant Resource Anomaly
      - alert: "TenantResourceAnomaly"
        expr: tenant_resource_usage_bytes > (tenant_baseline_usage_bytes * 2)
        for: 15m
        labels:
          severity: "medium"
          priority: "P3"
          service: "tenant-management"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/tenant-anomaly"
        annotations:
          summary: "Tenant {{ $labels.tenant_id }} resource anomaly detected"
          description: "Tenant {{ $labels.tenant_id }} is using {{ $value | humanizeBytes }}, which is more than 2x their baseline usage."
          impact: "Potential cost impact, resource contention"
          action: "Contact tenant to verify legitimate usage, check for runaway processes"
          current_usage: "{{ $value | humanizeBytes }}"
          baseline_usage: "{{ query \"tenant_baseline_usage_bytes{tenant_id='\" $labels.tenant_id \"'}\" | first | value | humanizeBytes }}"
          tenant_id: "{{ $labels.tenant_id }}"

      # WebSocket Event Processing Lag
      - alert: "WebSocketEventProcessingLag"
        expr: websocket_event_processing_lag_seconds > 30
        for: 10m
        labels:
          severity: "medium"
          priority: "P3"
          service: "websocket"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/websocket-lag"
        annotations:
          summary: "WebSocket event processing lag: {{ $value }}s"
          description: "WebSocket event processing is lagging by {{ $value }}s, affecting real-time updates."
          impact: "Delayed real-time updates, poor user experience"
          action: "Check event queue health, scale event processors if needed"
          processing_lag: "{{ $value }}s"
          threshold: "30s"

      # API Rate Limit Approaching
      - alert: "APIRateLimitApproaching"
        expr: (rate(api_requests_total[5m]) / api_rate_limit_per_minute) > 0.8
        for: 10m
        labels:
          severity: "medium"
          priority: "P3"
          service: "api"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/rate-limit-approaching"
        annotations:
          summary: "API rate limit approaching: {{ $value | humanizePercentage }}"
          description: "API request rate is {{ $value | humanizePercentage }} of the configured limit, approaching throttling threshold."
          impact: "Risk of rate limiting, potential service degradation"
          action: "Monitor request patterns, consider increasing limits or optimizing clients"
          utilization: "{{ $value | humanizePercentage }}"
          threshold: "80%"

  # =========================================================================
  # MEDIUM PRIORITY ALERTS (P3) - Response Within 1 Hour
  # =========================================================================
  - name: "medium-priority-alerts"
    interval: 300s
    rules:
      # Moderate Error Rate
      - alert: "ModerateErrorRate"
        expr: (rate(http_requests_total{status=~"5.."}[10m]) / rate(http_requests_total[10m])) > 0.02
        for: 10m
        labels:
          severity: "medium"
          priority: "P3"
          service: "monitoring-web-service"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/moderate-error-rate"
        annotations:
          summary: "Moderate error rate detected: {{ $value | humanizePercentage }}"
          description: "Error rate is {{ $value | humanizePercentage }}, exceeding 2% threshold for more than 10 minutes."
          impact: "Degraded user experience"
          action: "Investigate error patterns, monitor for escalation"
          error_rate: "{{ $value | humanizePercentage }}"
          threshold: "2%"

      # Disk Usage High
      - alert: "HighDiskUsage"
        expr: (node_filesystem_size_bytes{fstype!="tmpfs"} - node_filesystem_avail_bytes{fstype!="tmpfs"}) / node_filesystem_size_bytes{fstype!="tmpfs"} > 0.8
        for: 15m
        labels:
          severity: "medium"
          priority: "P3"
          service: "system"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/high-disk-usage"
        annotations:
          summary: "High disk usage: {{ $value | humanizePercentage }}"
          description: "Disk usage on {{ $labels.instance }} at {{ $labels.mountpoint }} is {{ $value | humanizePercentage }}, exceeding 80% threshold."
          impact: "Risk of disk space exhaustion"
          action: "Clean up logs, rotate files, consider disk expansion"
          disk_usage: "{{ $value | humanizePercentage }}"
          mountpoint: "{{ $labels.mountpoint }}"
          threshold: "80%"

      # WebSocket Connection Churn
      - alert: "WebSocketConnectionChurn"
        expr: rate(websocket_connections_created_total[10m]) > 5
        for: 15m
        labels:
          severity: "medium"
          priority: "P3"
          service: "websocket"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/websocket-churn"
        annotations:
          summary: "High WebSocket connection churn: {{ $value }}/minute"
          description: "WebSocket connections are being created at {{ $value }} connections per minute, indicating high churn rate."
          impact: "Increased server load, potential connection pool exhaustion"
          action: "Investigate client reconnection patterns, optimize connection handling"
          churn_rate: "{{ $value }}/minute"
          threshold: "5/minute"

  # =========================================================================
  # LOW PRIORITY ALERTS (P4) - Response Within 4 Hours
  # =========================================================================
  - name: "low-priority-alerts"
    interval: 600s
    rules:
      # CPU Usage Elevated
      - alert: "ElevatedCPUUsage"
        expr: (1 - avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m]))) > 0.7
        for: 30m
        labels:
          severity: "low"
          priority: "P4"
          service: "system"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/elevated-cpu-usage"
        annotations:
          summary: "Elevated CPU usage: {{ $value | humanizePercentage }}"
          description: "CPU usage on {{ $labels.instance }} is {{ $value | humanizePercentage }}, exceeding 70% for more than 30 minutes."
          impact: "Potential performance impact during peak load"
          action: "Monitor trends, consider optimization or scaling"
          cpu_usage: "{{ $value | humanizePercentage }}"
          threshold: "70%"

      # Database Connection Count High
      - alert: "DatabaseConnectionCountHigh"
        expr: postgresql_active_connections > (postgresql_max_connections * 0.7)
        for: 20m
        labels:
          severity: "low"
          priority: "P4"
          service: "postgresql"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/high-db-connections"
        annotations:
          summary: "High database connection count: {{ $value }}"
          description: "Active database connections ({{ $value }}) exceed 70% of maximum connections for more than 20 minutes."
          impact: "Approaching connection limit, potential bottleneck"
          action: "Monitor connection usage patterns, optimize connection management"
          active_connections: "{{ $value }}"
          max_connections: "{{ query \"postgresql_max_connections\" | first | value }}"
          utilization: "{{ $value | div (query \"postgresql_max_connections\" | first | value) | mul 100 }}%"

  # =========================================================================
  # PERFORMANCE AND CAPACITY PLANNING ALERTS
  # =========================================================================
  - name: "performance-capacity-alerts"
    interval: 300s
    rules:
      # Request Rate Trending Up
      - alert: "RequestRateTrendingUp"
        expr: predict_linear(rate(http_requests_total[1h])[6h:], 24*3600) > (rate(http_requests_total[1h]) * 1.5)
        for: 1h
        labels:
          severity: "low"
          priority: "P4"
          service: "capacity-planning"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/capacity-planning"
        annotations:
          summary: "Request rate trending upward - capacity planning alert"
          description: "Based on current trends, request rate may increase by 50% within 24 hours. Consider capacity planning."
          impact: "Future capacity constraints"
          action: "Review capacity planning, consider proactive scaling"
          current_rate: "{{ query \"rate(http_requests_total[1h])\" | first | value }}"
          predicted_rate: "{{ $value }}"

      # Memory Growth Trend
      - alert: "MemoryGrowthTrend"
        expr: predict_linear(node_memory_MemAvailable_bytes[6h], 24*3600) < (node_memory_MemTotal_bytes * 0.1)
        for: 2h
        labels:
          severity: "medium"
          priority: "P3"
          service: "capacity-planning"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/memory-growth-trend"
        annotations:
          summary: "Memory usage growth trend indicates potential exhaustion"
          description: "Based on current memory usage trends, available memory may drop below 10% within 24 hours on {{ $labels.instance }}."
          impact: "Risk of memory exhaustion in next 24 hours"
          action: "Investigate memory growth, plan capacity increase or optimization"
          current_available: "{{ query \"node_memory_MemAvailable_bytes{instance='\" $labels.instance \"'}\" | first | value | humanizeBytes }}"
          predicted_available: "{{ $value | humanizeBytes }}"

  # =========================================================================
  # SECURITY AND AUDIT ALERTS
  # =========================================================================
  - name: "security-audit-alerts"
    interval: 120s
    rules:
      # Suspicious Authentication Activity
      - alert: "SuspiciousAuthenticationActivity"
        expr: rate(authentication_failures_total[15m]) > 0.05 and rate(authentication_failures_total[15m]) < rate(authentication_failures_total[1h])
        for: 10m
        labels:
          severity: "medium"
          priority: "P3"
          service: "security"
          team: "security"
          runbook: "https://docs.fortium.dev/runbooks/suspicious-auth-activity"
        annotations:
          summary: "Suspicious authentication activity detected"
          description: "Authentication failure pattern suggests potential brute force or credential stuffing attack."
          impact: "Potential security compromise"
          action: "Review authentication logs, consider implementing additional security measures"
          failure_rate: "{{ $value }}/second"

      # Unusual API Access Pattern
      - alert: "UnusualAPIAccessPattern"
        expr: rate(api_requests_total[5m]) by (client_id) > (avg_over_time(rate(api_requests_total[5m])[1d:1h]) * 10)
        for: 10m
        labels:
          severity: "medium"
          priority: "P3"
          service: "security"
          team: "security"
          runbook: "https://docs.fortium.dev/runbooks/unusual-api-access"
        annotations:
          summary: "Unusual API access pattern from client {{ $labels.client_id }}"
          description: "Client {{ $labels.client_id }} is making requests at {{ $value }}x the normal rate, indicating potential abuse or misconfiguration."
          impact: "Potential service abuse or security issue"
          action: "Investigate client behavior, consider rate limiting or blocking if malicious"
          client_id: "{{ $labels.client_id }}"
          request_rate: "{{ $value }}x normal"

  # =========================================================================
  # BUSINESS CONTINUITY AND SLA ALERTS
  # =========================================================================
  - name: "business-continuity-alerts"
    interval: 300s
    rules:
      # SLA Violation Risk
      - alert: "SLAViolationRisk"
        expr: (rate(http_requests_total{status="200"}[1h]) / rate(http_requests_total[1h])) < 0.995
        for: 30m
        labels:
          severity: "high"
          priority: "P2"
          service: "sla-monitoring"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/sla-violation"
        annotations:
          summary: "SLA violation risk - availability below 99.5%"
          description: "Service availability is {{ $value | humanizePercentage }}, below the 99.5% SLA threshold for more than 30 minutes."
          impact: "SLA violation, potential customer compensation"
          action: "Immediate investigation required, implement corrective measures"
          current_availability: "{{ $value | humanizePercentage }}"
          sla_threshold: "99.5%"

      # Data Processing Backlog
      - alert: "DataProcessingBacklog"
        expr: data_processing_queue_size > 1000
        for: 15m
        labels:
          severity: "medium"
          priority: "P3"
          service: "data-processing"
          team: "platform"
          runbook: "https://docs.fortium.dev/runbooks/processing-backlog"
        annotations:
          summary: "Data processing backlog detected: {{ $value }} items"
          description: "Data processing queue size is {{ $value }}, indicating a backlog that may affect business operations."
          impact: "Delayed data processing, potential customer impact"
          action: "Scale processing workers, investigate processing bottlenecks"
          queue_size: "{{ $value }}"
          threshold: "1000"