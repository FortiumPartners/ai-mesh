# SignOz Docker Compose Configuration
# Updated to v0.94.1 - Latest Version with Zookeeper for ClickHouse cluster support
# Comprehensive observability platform with ClickHouse, OTEL Collector, Query Service, and Alert Manager

services:
  # Zookeeper for ClickHouse coordination
  zookeeper-1:
    image: bitnami/zookeeper:3.7.1
    container_name: signoz-zookeeper-1
    hostname: zookeeper-1
    user: root
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
    networks:
      - signoz-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # ClickHouse Database for SignOz metrics and traces (Updated to latest)
  clickhouse:
    image: clickhouse/clickhouse-server:24.1.2-alpine
    container_name: signoz-clickhouse
    hostname: clickhouse
    restart: unless-stopped
    tty: true
    depends_on:
      - zookeeper-1
    ports:
      - "9000:9000"    # Native TCP port
      - "8123:8123"    # HTTP interface
      - "9181:9181"    # Inter-server HTTP port
    volumes:
      - ./signoz/clickhouse-config.xml:/etc/clickhouse-server/config.xml:ro
      - ./signoz/clickhouse-users.xml:/etc/clickhouse-server/users.xml:ro
      - clickhouse-data:/var/lib/clickhouse/
    networks:
      - signoz-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "0.0.0.0:8123/ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    logging:
      options:
        max-size: 50m
        max-file: "3"
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G

  # Schema migrators for database migrations
  otel-collector-migrator-sync:
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-0.111.16}
    container_name: otel-migrator-sync
    command:
      - "sync"
      - "--dsn=tcp://clickhouse:9000"
      - "--up="
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - signoz-network
    restart: "no"

  otel-collector-migrator-async:
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-0.111.16}
    container_name: otel-migrator-async
    command:
      - "async"
      - "--dsn=tcp://clickhouse:9000"
      - "--up="
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - signoz-network
    restart: "no"

  # OpenTelemetry Collector - Updated to latest version
  otel-collector:
    image: signoz/signoz-otel-collector:${OTELCOL_TAG:-0.111.16}
    container_name: signoz-otel-collector
    restart: unless-stopped
    command:
      - "--config=/etc/otel-collector-config.yaml"
      - "--feature-gates=-pkg.translator.prometheus.NormalizeName"
    user: root
    ports:
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
      - "8888:8888"    # Prometheus metrics exposed by the collector
      - "13133:13133"  # health_check extension
      - "14250:14250"  # Jaeger gRPC receiver
      - "14268:14268"  # Jaeger thrift HTTP receiver
      - "9411:9411"    # Zipkin receiver
      - "2255:2255"    # TCP log receiver for logspout
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    volumes:
      - ./signoz/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    networks:
      - signoz-network
    depends_on:
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:13133"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # SignOz Query Service - Updated to latest version
  query-service:
    image: signoz/query-service:${DOCKER_TAG:-0.64.0}
    container_name: signoz-query-service
    restart: unless-stopped
    command:
      - "-config=/root/config/prometheus.yml"
      - "--use-logs-new-schema=true"
      - "--use-trace-new-schema=true"
    ports:
      - "6060:6060"    # pprof port
      - "8080:8080"    # query-service port
    environment:
      - ClickHouseUrl=tcp://clickhouse:9000
      - ALERTMANAGER_API_PREFIX=http://alertmanager:9093/api/
      - SIGNOZ_LOCAL_DB_PATH=/var/lib/signoz/signoz.db
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    volumes:
      - ./signoz/prometheus.yml:/root/config/prometheus.yml:ro
      - signoz-data:/var/lib/signoz/
    networks:
      - signoz-network
    depends_on:
      clickhouse:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # SignOz Frontend - Updated to latest version
  signoz-frontend:
    image: signoz/frontend:${DOCKER_TAG:-0.64.0}
    container_name: signoz-frontend
    restart: unless-stopped
    ports:
      - "3301:3301"    # SignOz UI port
    volumes:
      - ./signoz/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - signoz-network
    depends_on:
      - alertmanager
      - query-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3301"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Alert Manager for SignOz alerting
  alertmanager:
    image: signoz/alertmanager:${ALERTMANAGER_TAG:-0.23.7}
    container_name: signoz-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"    # Alert Manager web UI
    environment:
      - ALERTMANAGER_WEB_EXTERNAL_URL=http://localhost:9093
    volumes:
      - ./signoz/alertmanager-config.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/data
    networks:
      - signoz-network
    depends_on:
      query-service:
        condition: service_healthy
    command:
      - --queryService.url=http://query-service:8085
      - --storage.path=/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Logspout for Docker container logs (optional)
  logspout:
    image: "gliderlabs/logspout:v3.2.14"
    container_name: signoz-logspout
    volumes:
      - /etc/hostname:/etc/host_hostname:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: syslog+tcp://otel-collector:2255
    depends_on:
      - otel-collector
    restart: on-failure
    networks:
      - signoz-network

# Named volumes for data persistence
volumes:
  clickhouse-data:
    driver: local
    name: signoz-clickhouse-data
  
  signoz-data:
    driver: local
    name: signoz-query-data
  
  alertmanager-data:
    driver: local
    name: signoz-alertmanager-data

  zookeeper-data:
    driver: local
    name: signoz-zookeeper-data

# Custom network for SignOz services
networks:
  signoz-network:
    driver: bridge
    name: signoz-network
    ipam:
      config:
        - subnet: 172.21.0.0/16

# Performance and resource optimization for development
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

# Environment variables for version control
x-common-environment: &common-environment
  DOCKER_TAG: "0.64.0"
  OTELCOL_TAG: "0.111.16"
  ALERTMANAGER_TAG: "0.23.7"