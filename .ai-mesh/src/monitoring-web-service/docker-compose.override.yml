# Docker Compose Override File
# Development-specific overrides for local development
# This file is automatically loaded by docker-compose in addition to docker-compose.yml

version: '3.8'

services:
  # Development overrides for main application
  metrics-api:
    environment:
      # Development-specific environment variables
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - DEBUG=metrics:*
      # Hot reload for development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      # Mount source code for live reloading (development only)
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
    command: ["npm", "run", "dev"]
    # Add more generous resource limits for development
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: '1.0'
        reservations:
          memory: 256m
          cpus: '0.25'

  # Development PostgreSQL with additional debugging
  postgres:
    environment:
      # Enable PostgreSQL logging for development
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C --debug
    command: |
      postgres
      -c shared_preload_libraries=timescaledb,pg_stat_statements
      -c max_connections=50
      -c shared_buffers=128MB
      -c effective_cache_size=256MB
      -c log_statement=all
      -c log_min_duration_statement=100
      -c log_connections=on
      -c log_disconnections=on
      -c log_lock_waits=on
    ports:
      # Expose additional port for direct database access in development
      - "5433:5432"

  # Redis development configuration
  redis:
    command: |
      redis-server
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
      --appendonly yes
      --appendfsync everysec
      --loglevel debug
      --logfile /data/redis.log
    ports:
      # Expose additional port for direct Redis access in development
      - "6380:6379"

  # Development tools - Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: metrics-mailhog
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - metrics-network
    profiles:
      - development

  # Development file watcher for automatic rebuilds
  file-watcher:
    image: node:18-alpine
    container_name: metrics-file-watcher
    working_dir: /app
    volumes:
      - .:/app:ro
    command: >
      sh -c "
        npm install -g nodemon &&
        echo 'File watcher started. Monitoring for changes...' &&
        nodemon --watch src --watch package.json --ext ts,js,json --exec 'echo File changed at $(date)'
      "
    networks:
      - metrics-network
    profiles:
      - development
      - watch

# Development-specific volume overrides
volumes:
  # Use tmpfs for faster I/O in development
  metrics-logs:
    driver: tmpfs
    driver_opts:
      tmpfs:
        size: 100m

# Development network configuration
networks:
  metrics-network:
    driver: bridge
    name: metrics-development-network
    ipam:
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1